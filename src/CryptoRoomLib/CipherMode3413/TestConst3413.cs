namespace CryptoRoomLib.CipherMode3413
{
    /// <summary>
    /// Набор констант для тестирования алгоритма
    /// </summary>
    internal static class TestConst3413
    {
        /// <summary>
        /// Ключ шифрования.
        /// </summary>
        internal static readonly byte[] Key = new byte[]  
        {
            0xee, 0xa0, 0x09, 0xcc, 0x52, 0x38, 0x01, 0x35,
            0x37, 0x59, 0x74, 0xb3, 0x0f, 0x6a, 0x81, 0xc4,
            0xe2, 0x8b, 0x9f, 0x57, 0x8e, 0xba, 0x0a, 0xcc,
            0x43, 0x78, 0x64, 0x57, 0x00, 0xc3, 0x12, 0xe3
        };

        /*Комментарий к таблицам из примера: Старший бит находится в нулевой ячейке
               [0] [1] [2]-массив
               12   34 56 7890abcef0a1b2c3d4e5f0011223344556677889901213141516171819
               по факту старший значащий бит идет первым  т.е.
               [31] [30] [29]-реальное значение байт
               12   34 56 78
         */
        /// <summary>
        /// Пример А.2.4 для тестов из Гост 34.13. Секретный ключ.
        /// </summary>
        internal static readonly byte[] ExampleA2_4_key = new byte[32]
        {
            0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff, 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
            0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10, 0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef,
        };
        
        /// <summary>
        /// Пример А.2.4 для тестов из Гост 34.13. Начальный вектор 2*n.
        /// </summary>
        internal static readonly byte[] ExampleA2_4_iv = new byte[32]
        {
            0x12,0x34,0x56,0x78,0x90,0xab,0xce,0xf0,0xa1,0xb2,0xc3,0xd4,0xe5,0xf0,0x01,0x12,
            0x23,0x34,0x45,0x56,0x67,0x78,0x89,0x90,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19
        };

        /// <summary>
        /// Пример А.2.4 для тестов из Гост 34.13. Значения выходного блока для проверки итераций.
        /// </summary>
        internal static readonly byte[,] ExampleA2_4_cryptedText = new byte[4, 16]
        {
            { 0x68,0x99,0x72,0xd4,0xa0,0x85,0xfa,0x4d,0x90,0xe5,0x2e,0x3d,0x6d,0x7d,0xcc,0x27 },
            { 0x28,0x26,0xe6,0x61,0xb4,0x78,0xec,0xa6,0xaf,0x1e,0x8e,0x44,0x8d,0x5e,0xa5,0xac },
            { 0xfe,0x7b,0xab,0xf1,0xe9,0x19,0x99,0xe8,0x56,0x40,0xe8,0xb0,0xf4,0x9d,0x90,0xd0 },
            { 0x16,0x76,0x88,0x06,0x5a,0x89,0x5c,0x63,0x1a,0x2d,0x9a,0x15,0x60,0xb6,0x39,0x70 }
        };

        /// Пример А.2.4 для тестов из Гост 34.13. Открытый текст – четыре 128 битных блока.
        /// </summary>
        internal static readonly byte[,] ExampleA2_4_text = new byte[4, 16]
        {
            { 0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x00,0xff,0xee,0xdd,0xcc,0xbb,0xaa,0x99,0x88 },
            { 0x00,0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0xaa,0xbb,0xcc,0xee,0xff,0x0a },
            { 0x11,0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0xaa,0xbb,0xcc,0xee,0xff,0x0a,0x00 },
            { 0x22,0x33,0x44,0x55,0x66,0x77,0x88,0x99,0xaa,0xbb,0xcc,0xee,0xff,0x0a,0x00,0x11 }
        };
    }
}
